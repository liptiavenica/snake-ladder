package SnakeLadder.View;

import SnakeLadder.Controller.Controller;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSlider;

public class GUIFrame extends javax.swing.JFrame {

    /**
     * Kelas Controller
     */
    private Controller controller;
    /**
     * JPanel untuk menggambar board
     */
    private BoardPanel board;
    /**
     * Jpanel untuk menggambar Player
     */
    private PlayerPanel player;
    protected BufferedImage img1;

    /**
     * Contructor
     * @param Controller controller
     */
    public GUIFrame(Controller controller) {
            setContentPane(new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                g.drawImage(img1, 0, 0, null);
            }
        });
        initComponents();
        this.controller = controller;

        jButton1.setVisible(false);

        setSize(450, 350);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        URL imgurl = getClass().getClassLoader().getResource("Frame.png");
        try {
            img1 = ImageIO.read(imgurl);
        } catch (IOException ex) {
            Logger.getLogger(GUIFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * Getter JPanel Board
     *
     * @return board
     */
    public BoardPanel getBoardPanel() {
        return board;
    }
    //<editor-fold defaultstate="collapsed" desc="Getter">

    /**
     * Method untuk Getter JPanel Player
     * @return player
     */
    public PlayerPanel getPlayerPanel() {
        return player;
    }

    /**
     * Method untuk Getter Controller
     * @return controller
     */
    public Controller getController() {
        return controller;
    }

    /**
     * Getter combo box untuk memilih player vs player atau AI vs player
     * @return playerVSComComboBox
     */
    public JComboBox getjComboBox1() {
        return playerVSComComboBox;
    }

    /**
     * Getter combo box untuk mengatr difficulty AI
     * @return jComboBox2
     */
    public JComboBox getjComboBox2() {
        return difficulityComboBox;
    }

    /**
     * getteer untuk slider jumlah pemain.
     * @return jSlider1
     */
    public JSlider getjSlider1() {
        return numOfPlayersSlider;
    }
    //</editor-fold>

    /**
     * Menampilkan window baru yang berisi pesan player yang menang.
     * @param s player yang menang
     */
    public void showWinner(String s) {
        JOptionPane.showMessageDialog(null, s);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        playerVSComComboBox = new javax.swing.JComboBox();
        selectGametypeLabel = new javax.swing.JLabel();
        playerVsPlayerLabel = new javax.swing.JLabel();
        numOfPlayersSlider = new javax.swing.JSlider();
        numOfPlayersLabel = new javax.swing.JLabel();
        playerVsComLabel = new javax.swing.JLabel();
        startGameButton = new javax.swing.JButton();
        difficulityComboBox = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Our Snake Ladder");
        setPreferredSize(new java.awt.Dimension(800, 750));

        jButton1.setBackground(new java.awt.Color(255, 255, 102));
        jButton1.setFont(new java.awt.Font("Snap ITC", 0, 12)); // NOI18N
        jButton1.setText("Throw Dice");
        jButton1.setMaximumSize(new java.awt.Dimension(100, 50));
        jButton1.setMinimumSize(new java.awt.Dimension(100, 50));
        jButton1.setPreferredSize(new java.awt.Dimension(100, 50));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        playerVSComComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Player VS Player", "Player VS Com" }));

        selectGametypeLabel.setText("Select Gametype");

        playerVsPlayerLabel.setText("Player Vs Player");

        numOfPlayersSlider.setMajorTickSpacing(1);
        numOfPlayersSlider.setMaximum(6);
        numOfPlayersSlider.setMinimum(2);
        numOfPlayersSlider.setPaintTicks(true);
        numOfPlayersSlider.setSnapToTicks(true);
        numOfPlayersSlider.setToolTipText("Number of Players");
        numOfPlayersSlider.setValue(2);
        numOfPlayersSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                numOfPlayersSliderStateChanged(evt);
            }
        });

        numOfPlayersLabel.setText("Number of Players: 2");

        playerVsComLabel.setText("Player Vs Com");

        startGameButton.setBackground(new java.awt.Color(255, 204, 0));
        startGameButton.setFont(new java.awt.Font("Stencil", 0, 12)); // NOI18N
        startGameButton.setText("Start Game !");
        startGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startGameButtonActionPerformed(evt);
            }
        });

        difficulityComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Easy", "Medium", "Hard" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(playerVsPlayerLabel)
                                    .addComponent(numOfPlayersSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(playerVSComComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(playerVsComLabel)
                                    .addComponent(difficulityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(numOfPlayersLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(selectGametypeLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(startGameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 510, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(selectGametypeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(playerVSComComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playerVsPlayerLabel)
                    .addComponent(playerVsComLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(numOfPlayersSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(difficulityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numOfPlayersLabel)
                .addGap(41, 41, 41)
                .addComponent(startGameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 406, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Tombol untuk melempar dadu pemain saat ini.
     * @param evt
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        controller.rollDice();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Method untuk mengeset jumlah pemain di Slider
     * @param evt
     */
    private void numOfPlayersSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_numOfPlayersSliderStateChanged
        numOfPlayersLabel.setText("Number of Players : " + numOfPlayersSlider.getValue());
    }//GEN-LAST:event_numOfPlayersSliderStateChanged

    /**
     * Method untuk menghide semua pilihan awal yang berisi option setting permainan yang akan dimainkan
     * dan menggambar Papan dan Player.
     * @param evt
     */
    private void startGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startGameButtonActionPerformed
        startGameButton.setVisible(false);
        numOfPlayersSlider.setVisible(false);
        playerVSComComboBox.setVisible(false);
        difficulityComboBox.setVisible(false);
        try {
            controller.gameStart();
        } catch (IOException ex) {
            Logger.getLogger(GUIFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        setSize(1020, 750);
        try {
            board = new BoardPanel(this);
        } catch (IOException ex) {
            Logger.getLogger(GUIFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        player = new PlayerPanel(this);

        JLayeredPane canvas = getLayeredPane();
        canvas.add(player, 2);
        canvas.add(board, 1);

    

        board.setBounds(0, 0, 900, 750);
        player.setBounds(10, 10, 900, 700);
        player.setVisible(true);
        board.setVisible(true);
        jButton1.setVisible(true);
    }//GEN-LAST:event_startGameButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox difficulityComboBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel numOfPlayersLabel;
    private javax.swing.JSlider numOfPlayersSlider;
    private javax.swing.JComboBox playerVSComComboBox;
    private javax.swing.JLabel playerVsComLabel;
    private javax.swing.JLabel playerVsPlayerLabel;
    private javax.swing.JLabel selectGametypeLabel;
    private javax.swing.JButton startGameButton;
    // End of variables declaration//GEN-END:variables
}
